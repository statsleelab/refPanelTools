// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// indexer
void indexer(std::string reference_data_file, std::string output_file);
RcppExport SEXP _refPanelTools_indexer(SEXP reference_data_fileSEXP, SEXP output_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type output_file(output_fileSEXP);
    indexer(reference_data_file, output_file);
    return R_NilValue;
END_RCPP
}
// cal_af1ref
void cal_af1ref(std::string reference_data_file, int num_pops, std::string output_file);
RcppExport SEXP _refPanelTools_cal_af1ref(SEXP reference_data_fileSEXP, SEXP num_popsSEXP, SEXP output_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< int >::type num_pops(num_popsSEXP);
    Rcpp::traits::input_parameter< std::string >::type output_file(output_fileSEXP);
    cal_af1ref(reference_data_file, num_pops, output_file);
    return R_NilValue;
END_RCPP
}
// extract_chr_data
void extract_chr_data(int chr_num, int num_pops, std::string index_data_file, std::string reference_data_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_extract_chr_data(SEXP chr_numSEXP, SEXP num_popsSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type chr_num(chr_numSEXP);
    Rcpp::traits::input_parameter< int >::type num_pops(num_popsSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    extract_chr_data(chr_num, num_pops, index_data_file, reference_data_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// extract_chr_pop_data
void extract_chr_pop_data(int chr_num, std::vector<std::string> pop_vec, std::string index_data_file, std::string reference_data_file, std::string reference_pop_desc_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_extract_chr_pop_data(SEXP chr_numSEXP, SEXP pop_vecSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP reference_pop_desc_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type chr_num(chr_numSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type pop_vec(pop_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_pop_desc_file(reference_pop_desc_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    extract_chr_pop_data(chr_num, pop_vec, index_data_file, reference_data_file, reference_pop_desc_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// extract_all_af1
void extract_all_af1(int chr_num, std::string index_data_file, std::string reference_data_file, std::string reference_pop_desc_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_extract_all_af1(SEXP chr_numSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP reference_pop_desc_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type chr_num(chr_numSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_pop_desc_file(reference_pop_desc_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    extract_all_af1(chr_num, index_data_file, reference_data_file, reference_pop_desc_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// simulate_af1_z_allchr
void simulate_af1_z_allchr(std::vector<std::string> pop_vec, std::vector<int> num_sim_vec, std::string index_data_file, std::string reference_data_file, std::string reference_pop_desc_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_simulate_af1_z_allchr(SEXP pop_vecSEXP, SEXP num_sim_vecSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP reference_pop_desc_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type pop_vec(pop_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type num_sim_vec(num_sim_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_pop_desc_file(reference_pop_desc_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    simulate_af1_z_allchr(pop_vec, num_sim_vec, index_data_file, reference_data_file, reference_pop_desc_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// simulate_af1_z
void simulate_af1_z(int chr_num, std::vector<std::string> pop_vec, std::vector<int> num_sim_vec, std::string index_data_file, std::string reference_data_file, std::string reference_pop_desc_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_simulate_af1_z(SEXP chr_numSEXP, SEXP pop_vecSEXP, SEXP num_sim_vecSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP reference_pop_desc_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type chr_num(chr_numSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type pop_vec(pop_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type num_sim_vec(num_sim_vecSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_pop_desc_file(reference_pop_desc_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    simulate_af1_z(chr_num, pop_vec, num_sim_vec, index_data_file, reference_data_file, reference_pop_desc_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// extract_reg_data
void extract_reg_data(int chr_num, int start_bp, int end_bp, int num_pops, std::string index_data_file, std::string reference_data_file, std::string ref_out_file);
RcppExport SEXP _refPanelTools_extract_reg_data(SEXP chr_numSEXP, SEXP start_bpSEXP, SEXP end_bpSEXP, SEXP num_popsSEXP, SEXP index_data_fileSEXP, SEXP reference_data_fileSEXP, SEXP ref_out_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type chr_num(chr_numSEXP);
    Rcpp::traits::input_parameter< int >::type start_bp(start_bpSEXP);
    Rcpp::traits::input_parameter< int >::type end_bp(end_bpSEXP);
    Rcpp::traits::input_parameter< int >::type num_pops(num_popsSEXP);
    Rcpp::traits::input_parameter< std::string >::type index_data_file(index_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ref_out_file(ref_out_fileSEXP);
    extract_reg_data(chr_num, start_bp, end_bp, num_pops, index_data_file, reference_data_file, ref_out_file);
    return R_NilValue;
END_RCPP
}
// test_gz_file
void test_gz_file(std::string gz_file);
RcppExport SEXP _refPanelTools_test_gz_file(SEXP gz_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type gz_file(gz_fileSEXP);
    test_gz_file(gz_file);
    return R_NilValue;
END_RCPP
}
// get_geno_info
std::string get_geno_info(int64_t fpos, std::string reference_data_file);
RcppExport SEXP _refPanelTools_get_geno_info(SEXP fposSEXP, SEXP reference_data_fileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int64_t >::type fpos(fposSEXP);
    Rcpp::traits::input_parameter< std::string >::type reference_data_file(reference_data_fileSEXP);
    rcpp_result_gen = Rcpp::wrap(get_geno_info(fpos, reference_data_file));
    return rcpp_result_gen;
END_RCPP
}
// largeval
Rcpp::NumericVector largeval(int64_t val);
RcppExport SEXP _refPanelTools_largeval(SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int64_t >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(largeval(val));
    return rcpp_result_gen;
END_RCPP
}
// simulate_zscore
void simulate_zscore();
RcppExport SEXP _refPanelTools_simulate_zscore() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    simulate_zscore();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_refPanelTools_indexer", (DL_FUNC) &_refPanelTools_indexer, 2},
    {"_refPanelTools_cal_af1ref", (DL_FUNC) &_refPanelTools_cal_af1ref, 3},
    {"_refPanelTools_extract_chr_data", (DL_FUNC) &_refPanelTools_extract_chr_data, 5},
    {"_refPanelTools_extract_chr_pop_data", (DL_FUNC) &_refPanelTools_extract_chr_pop_data, 6},
    {"_refPanelTools_extract_all_af1", (DL_FUNC) &_refPanelTools_extract_all_af1, 5},
    {"_refPanelTools_simulate_af1_z_allchr", (DL_FUNC) &_refPanelTools_simulate_af1_z_allchr, 6},
    {"_refPanelTools_simulate_af1_z", (DL_FUNC) &_refPanelTools_simulate_af1_z, 7},
    {"_refPanelTools_extract_reg_data", (DL_FUNC) &_refPanelTools_extract_reg_data, 7},
    {"_refPanelTools_test_gz_file", (DL_FUNC) &_refPanelTools_test_gz_file, 1},
    {"_refPanelTools_get_geno_info", (DL_FUNC) &_refPanelTools_get_geno_info, 2},
    {"_refPanelTools_largeval", (DL_FUNC) &_refPanelTools_largeval, 1},
    {"_refPanelTools_simulate_zscore", (DL_FUNC) &_refPanelTools_simulate_zscore, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_refPanelTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
